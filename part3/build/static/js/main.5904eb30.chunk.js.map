{"version":3,"sources":["components/Search.js","components/AddContacts.js","components/Phonebook.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Search","value","onChange","AddContact","newName","handleName","newPhone","handlePhone","handleSubmit","text","type","onClick","Phonebook","personToShow","handleDelete","console","log","length","map","person","name","number","id","Notification","message","notificationOf","style","color","fontStyle","fontSize","background","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","answer","data","newContact","post","delete","put","response","App","useState","persons","setPersons","setNewName","setNewPhone","newSearch","setNewSearch","notification","setNotification","notificationClass","setNotificationClass","useEffect","services","concat","filter","toLowerCase","includes","handleDeleteOf","window","confirm","catch","err","setTimeout","event","target","AddContacts","preventDefault","lowerCasePersons","result","isRepeated","contact","find","newPersons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5904eb30.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Search = ({value, onChange}) => {\r\n    return (\r\n        <div>\r\n            <h2>Search</h2>\r\n      <input value={value} onChange={onChange} />\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search","import React from 'react';\r\n\r\nconst AddContact = ({newName, handleName, newPhone, handlePhone, handleSubmit, text}) => {\r\n    return (\r\n        <div>\r\n        <h2>{text}</h2>\r\n      <form>\r\n        <div>\r\n          name:<input \r\n          value={newName}\r\n          onChange={handleName}\r\n          />\r\n          phone: <input \r\n          value={newPhone}\r\n          onChange={handlePhone}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\" onClick={handleSubmit}>add</button>\r\n        </div>\r\n      </form>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default AddContact","import React from 'react';\r\n\r\nconst Phonebook = ({personToShow, text, handleDelete}) => {\r\nreturn (\r\n    <div>\r\n\r\n<h2>{text}</h2>\r\n\r\n{console.log(personToShow)}\r\n{personToShow.length > 0 ? personToShow.map(person => {\r\n  return <p key={person.id}>{person.name} {person.number}<button onClick={()=>handleDelete(person)}>Delete</button></p>\r\n}): null}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Phonebook","import React from 'react'\r\nimport '../'\r\n\r\nconst Notification = ({message, notificationOf}) => {\r\n    if(message === null){\r\n        return null \r\n    }\r\n    const error = {\r\n        color: \"red\",\r\n        background: \"lightgrey\",\r\n        fontSize: \"20px\",\r\n        borderStyle: \"solid\",\r\n        borderRadius: \"5px\",\r\n        padding: \"10px\",\r\n        marginBottom: \"10px\"\r\n      }\r\n    const success = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n      }\r\n    return (\r\n        <div style={notificationOf === 'success' ? success : error}>\r\n            <p>{message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = \"api/persons\";\r\n\r\nconst getAll = () => {\r\n   return axios.get(baseUrl).then(answer => answer.data)\r\n}\r\n\r\nconst create = (newContact) => {\r\n  return  axios\r\n    .post(baseUrl, newContact)\r\n   \r\n}\r\n\r\nconst deleteContact = (id) => {\r\n   return axios\r\n        .delete(`${baseUrl}/${id}`)\r\n        .then(console.log(\"deleted\"))\r\n        \r\n}\r\n\r\nconst update = (newContact) => {\r\n  console.log(newContact)\r\n return   axios\r\n      .put(`${baseUrl}/${newContact.id}`, newContact)\r\n      .then(response => response.data);\r\n\r\n}\r\nexport default {getAll, create, deleteContact, update}","import React, { useEffect, useState } from \"react\";\nimport Search from \"./components/Search\";\nimport AddContacts from \"./components/AddContacts\";\nimport Phonebook from \"./components/Phonebook\";\nimport Notification from \"./components/Notification\";\nimport services from \"./services/persons\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newSearch, setNewSearch] = useState(\"\");\n  // const [currentId, setCurrentId] = useState(0);\n  const [notification, setNotification] = useState(null);\n  const [notificationClass, setNotificationClass] = useState(null);\n\n  const fetchDB = () => {\n    services.getAll().then((response) => {\n      console.log(\"this is the get all response\", response);\n      setPersons(persons.concat(response));\n    });\n  };\n\n  useEffect(fetchDB, []);\n\n  const filterPersons = () => {\n    return persons.filter((person) => {\n      return person.name.toLowerCase().includes(newSearch.toLowerCase());\n    });\n  };\n\n  const personToShow = newSearch === \"\" ? persons : filterPersons();\n\n  const handlePhone = (event) => {\n    setNewPhone(event.target.value);\n  };\n\n  // Compare the value as lowercase, to avoid having duplicated names with different cases.\n  const isRepeated = (name) => {\n    console.log(name);\n\n    const lowerCasePersons = persons.map((person) => {\n      console.log(person);\n      return person.name.toLowerCase();\n    });\n    console.log(lowerCasePersons);\n    const result = lowerCasePersons.includes(newName.toLowerCase());\n    console.log(result);\n    return result;\n  };\n\n  const handleName = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleSearch = (event) => {\n    setNewSearch(event.target.value);\n  };\n  const handleDeleteOf = ({ id, name }) => {\n    const result = window.confirm(`Do you want to delete ${name}`);\n    if (result) {\n      services.deleteContact(id).catch((err) => {\n        setNotification(`The contact ${name} didn't exist in database`);\n        setNotificationClass(\"error\");\n        setTimeout(() => {\n          setNotificationClass(null);\n          setNotification(null);\n        }, 5000);\n      });\n      setPersons(\n        persons.filter((person) => {\n          return person.id !== id;\n        })\n      );\n    }\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!isRepeated(newName)) {\n\n      const newContact = { name: newName, number: newPhone };\n      services\n        .create(newContact)\n        .then((response) => {\n         \n          setPersons(persons.concat(response.data));\n          setNewName(\"\");\n          setNewPhone(\"\");\n          setNotification(\n            `The new contact ${newContact.name} was added successfully`\n          );\n          setNotificationClass(\"success\");\n          setTimeout(() => {\n            setNotificationClass(null);\n            setNotification(null);\n          }, 5000);\n        })\n        .catch((err) => {\n          \n          setNotification(`${err.response.data}`);\n          setNotificationClass(\"error\");\n          setTimeout(() => {\n            setNotificationClass(null);\n            setNotification(null);\n          }, 5000);\n        });\n    } else {\n      const toUpdate = window.confirm(\n        `${newName} is already added, do you want to update de phone instead?`\n      );\n      if (toUpdate) {\n        const contact = persons.find((person) => person.name === newName);\n\n        const newContact = { ...contact, number: newPhone };\n        console.log(\"this old\", contact);\n        console.log(\"this new\", newContact);\n        console.log(\"this persons\", persons);\n        services.update(newContact).then((response) => {\n          console.log(response);\n          const newPersons = persons.map((person) =>\n            person.name !== newName ? person : response\n          );\n\n          console.log(\"this what UPDATE\", newPersons);\n          setPersons(newPersons);\n          console.log(\"this persons2\", persons);\n          setNotification(\n            `The contact ${newContact.name} was updated successfully`\n          );\n          setNotificationClass(\"success\");\n          setTimeout(() => {\n            setNotificationClass(null);\n            setNotification(null);\n          }, 5000);\n        }).catch(err => {\n          setNotification(`There was an error ${err.response.data}`)\n      setNotificationClass('error')\n      setTimeout(()=>{\n        setNotificationClass(null);\n        setNotification(null)\n      }, 5000)\n        })\n      }\n    }\n  };\n  return (\n    <div>\n      <Search onChange={handleSearch} value={newSearch} />\n      {newSearch !== \"\" && (\n        <Phonebook\n          personToShow={personToShow}\n          text=\"search result\"\n          handleDelete={handleDeleteOf}\n        />\n      )}\n      <Notification message={notification} notificationOf={notificationClass} />\n      <AddContacts\n        text=\"Add Contacts\"\n        newName={newName}\n        handleName={handleName}\n        newPhone={newPhone}\n        handlePhone={handlePhone}\n        handleSubmit={handleSubmit}\n      />\n      <Phonebook\n        personToShow={persons}\n        text=\"Phonebook\"\n        handleDelete={handleDeleteOf}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}